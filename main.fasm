include "boot.fasm"
include "pm.fasm"

jmp main
include "print.fasm"
dq 0
include "key.fasm"
dq 0

main:
	lidt [IDTR]
	prints msg.name
	print 0, 0
	prints msg.version
	print 0, 0

key_print:
	mov esi, 0
	; mov dword [cursor], 0

.main:
	cmp dword [cursor], 4000; 1310 - лимит для отображения данных в AX 
	jb @f
	mov dword [cursor], 0
@@:
	cmp esi, 256
	jb @f
	mov esi, 0
@@:
	mov ax, word [esi+key]
	add esi, 2

	cmp ah, 0
	je .main

	cmp al, 0
	je .main

	cmp al, 8
	je .back_space

	cmp al, 0x18
	je .up

	cmp al, 0x19
	je .down

	cmp al, 0x1A
	je .right

	cmp al, 0x1B
	je .left

	print al, 15

.main_end:
	mov ax, word [cursor]
	div word [_2]
	move ax

	dec byte [esi+key-1]
	jmp .main

.back_space:
	cmp dword [cursor], 0
	je .main_end

	sub dword [cursor], 2
	print 0, 0
	sub dword [cursor], 2
	jmp .main_end

.up:
	cmp dword [cursor], 80*2
	jb .main_end

	sub dword [cursor], 80*2
	jmp .main_end

.down:
	cmp dword [cursor], (1999-81)*2
	ja .main_end

	add dword [cursor], 80*2
	jmp .main_end

.left:
	cmp dword [cursor], 0
	je .main_end

	sub dword [cursor], 2
	jmp .main_end

.right:
	cmp dword [cursor], 1999*2
	je .main_end

	add dword [cursor], 2
	jmp .main_end

msg:
.name db 15, 'IETTCQV OS', 0
.version db 2, 'v0.0.1', 0

_2 dw 2
_10 db 10
_16 db 16
_80 db 80

include "IDT.fasm"

int_EOI:
	push ax
	; Reset interrupt controllers
	mov al, 0x20
	out iSr_master, al
	out iSr_slave, al
	pop ax
	iretd

KEYBOARD_SPECIAL_KEY equ 0xE0
irq1_handler:
	pushf
	push ax esi
	del ax
	del esi
	
.main:
	in al, 0x60

    cmp al, KEYBOARD_SPECIAL_KEY
    jne @f
    jmp .return
@@:
	cmp al, 0x7F
	ja .return

.down: ; нажатие клавиши
	mul byte [_2]
	movzx esi, al
	inc byte [esi+key+1]

.return:
	pop esi ax
	popf
	jmp int_EOI